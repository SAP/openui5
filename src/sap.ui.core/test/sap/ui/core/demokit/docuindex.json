{
	"explored" : {
		"entitiesDefaults" : {
			"appComponent" : "CA-UI5-COR",
			"formFactors" : "-"
		},
		"samplesRef" : {
			"namespace" : "sap.ui.core.sample",
			"ref" : "test-resources/sap/ui/core/demokit/sample"
		},
		"entities" : [
			{
				"id" : "sap.ui.core.Control",
				"name" : "Control",
				"category" : "Display",
				"since" : "1.0",
				"samples" : [ "sap.ui.core.sample.ControlBusyIndicator" ]
			},
			{
				"id" : "sap.ui.core.HTML",
				"name" : "HTML",
				"category" : "Display",
				"since" : "1.0",
				"samples" : [ "sap.ui.core.sample.Html" ]
			},
			{
				"id" : "sap.ui.core.Icon",
				"name" : "Icon",
				"category" : "Display",
				"since" : "1.12",
				"samples" : [ "sap.ui.core.sample.Icon" ]
			},
			{
				"id" : "sap.ui.core.InvisibleText",
				"name" : "InvisibleText",
				"category" : "Display",
				"since" : "1.28",
				"appComponent" : "CA-UI5-CTR",
				"samples" : [ "sap.ui.core.sample.InvisibleText" ]
			},
			{
				"id" : "sap.ui.core.mvc.XMLView",
				"name" : "XMLView",
				"category" : "Display",
				"since" : "1.26",
				"samples" : [
					"sap.ui.core.sample.ViewTemplate.types",
					"sap.ui.core.sample.ViewTemplate.scenario"
				]
			},
			{
				"id" : "sap.ui.test.Opa5",
				"name" : "OPA5",
				"category" : "Testing",
				"since" : "1.24",
				"samples" : [
					"sap.ui.core.sample.OpaMatchers",
					"sap.ui.core.sample.OpaById",
					"sap.ui.core.sample.OpaDynamicWait",
					"sap.ui.core.sample.OpaPageObject"
				]
			},
			{
				"id" : "sap.ui.core.theming",
				"name" : "Theming",
				"category" : "Theming",
				"since" : "1.26",
				"samples" : [
					"sap.ui.core.sample.ThemeCustomClasses",
					"sap.ui.core.sample.BasicThemeParameters"
				]
			},
			{
				"id" : "sap.ui.core.routing.Route",
				"name" : "PatternMatching",
				"category" : "Routing",
				"since" : "1.16",
				"samples" : [
					"sap.ui.core.sample.PatternMatching"
				]
			},
			{
			  "id" : "sap.ui.model.type.Date",
			  "name" : "Date Type",
			  "category" : "Data Binding",
			  "since" : "1.10",
			  "samples" : [
				"sap.ui.core.sample.TypeDateAsDate",
				"sap.ui.core.sample.TypeDateAsString"
			  ]
			}
		],
		"samples" : [
			{
				"id": "sap.ui.core.sample.TypeDateAsDate",
				"name": "Date Type - Source As Date",
				"description": "This sample explains the formatting options of the date type with the date being available as date object."
			},
			{
				"id": "sap.ui.core.sample.TypeDateAsString",
				"name": "Date Type - Source As String",
				"description": "This sample explains the formatting options of the date type with the date being available as string."
			},
			{
				"id": "sap.ui.core.sample.ControlBusyIndicator",
				"name": "Control Busy Indicator",
				"description": "A control's busy indicator can be used to block parts of the screen until an operation has finished. In this example we block the content of only one out of two panels."
			},
			{
				"id": "sap.ui.core.sample.Html",
				"name": "HTML",
				"description": "With the HTML controls you can easily embed any kind of HTML content into your UI5 mobile application."
			},
			{
				"id": "sap.ui.core.sample.Icon",
				"name": "Icon",
				"description": "Built with an embedded font, icons scale well, and can be altered with CSS. They can also fire a press event. See the Icon Explorer for more icons."
			},
			{
				"id" : "sap.ui.core.sample.InvisibleText",
				"name" : "InvisibleText",
				"description" : "Many controls provide the associations ariaLabelledBy and ariaDescribedBy for accessibility purposes. The InvisibleText control can be used by application to provide hidden texts on the UI which can be referenced via these associations."
			},
			{
				"id": "sap.ui.core.sample.ViewTemplate.scenario",
				"name": "XMLView Templating: demo scenario",
				"description": "Complete demo scenario for XML View Templating based on OData V4 annotations"
			},
			{
				"id": "sap.ui.core.sample.ViewTemplate.types",
				"name": "XMLView Templating: UI5 OData types",
				"description": "XMLView sample with UI5 core primitive OData types"
			},
			{
				"id": "sap.ui.core.sample.OpaMatchers",
				"name": "Using Matchers",
				"description": "Matchers are used to retrieve controls that have to match a condition, eg: Property matching a value"
			},
			{
				"id": "sap.ui.core.sample.OpaById",
				"name": "Finding controls by id",
				"description": "OPA finds a control by its id, triggers a tap and then finds multiple controls by their ids"
			},
			{
				"id": "sap.ui.core.sample.OpaDynamicWait",
				"name": "How to write nested actions",
				"description": "If you have complex control structures you are able to add actions based on the result of previous actions."
			},
			{
				"id": "sap.ui.core.sample.OpaPageObject",
				"name": "How to structure your OPA tests with Page Objects",
				"description": "If you have multiple pages or UI areas that have several operations, you should place reuse functions in Page Objects to make your OPA tests maintainable. The example shows as well how to share and reuse functionality within and across page objects."
			},
			{
				"id" : "sap.ui.core.sample.ThemeCustomClasses",
				"name" : "Theme-dependent CSS-classes",
				"description" : "Sample display of 'sapTheme'-prefixed CSS classes for theme-dependent styling of custom HTML/Controls. The set displayed is to be used to style static HTML elements."
			},
			{
				"id" : "sap.ui.core.sample.BasicThemeParameters",
				"name" : "Basic Theme Parameters",
				"description" : "This sample displays a set of basic theme parameters. Available in the predefined themes 'Blue Crystal' and 'High Contrast Black'. They can be used for custom HTML or custom controls to ensure theme-dependent styling. Please ensure a semantic correct usage."
			},
			{
				"id" : "sap.ui.core.sample.PatternMatching",
				"name" : "Route Patterns",
				"description" : "Syntax for the Route pattern property."
			}
		]
	}
}
