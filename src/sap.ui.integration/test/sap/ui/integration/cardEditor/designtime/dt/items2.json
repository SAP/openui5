{
	"formatterGroup": {
		"type": "group",
		"label": "Formatter",
		"expanded": false
	},
	"dateFormatter": {
		"manifestpath": "/sap.card/configuration/parameters/dateFormatter/value",
		"label": "Date Formatter",
		"type": "date",
		"formatter": {
			"style": "long"
		}
	},
	"datetimeFormatter": {
		"manifestpath": "/sap.card/configuration/parameters/datetimeFormatter/value",
		"label": "Datetime Formatter",
		"type": "datetime",
		"formatter": {
			"style": "long"
		}
	},
	"floatFormatter": {
		"manifestpath": "/sap.card/configuration/parameters/floatFormatter/value",
		"label": "Float Formatter",
		"type": "number",
		"formatter": {
			"decimals": 3,
			"style":"short"
		}
	},
	"integerFormatter": {
		"manifestpath": "/sap.card/configuration/parameters/integerFormatter/value",
		"label": "Integer Formatter",
		"type": "integer",
		"formatter": {
			"minIntegerDigits": 3,
			"maxIntegerDigits": 6,
			"emptyString": ""
		}
	},
	"percentFormatter": {
		"manifestpath": "/sap.card/configuration/parameters/percentFormatter/value",
		"label": "String Array",
		"type": "string[]",
		"editable": true,
		"values": {
			"data": {
				"json": [
					{ "text": 0.3, "key": "key1", "additionalText": 1293883200000, "icon": "sap-icon://accept" },
					{ "text": 0.6, "key": "key2", "additionalText": 1293883200000, "icon": "sap-icon://cart" },
					{ "text": 0.8, "key": "key3", "additionalText": 1293883200000, "icon": "sap-icon://zoom-in" }
				],
				"path": "/"
			},
			"item": {
				"text": "Percent: {= format.percent(${text}) }",
				"key": "{key}",
				"additionalText": "datetime: {= format.dateTime(${additionalText}, {style: 'long'}) }",
				"icon": "{icon}"
			}
		}
	},
	"formatterinText": {
		"manifestpath": "/sap.card/configuration/parameters/formatterinText/value",
		"label": "Return String Array Values",
		"type": "string",
		"values": {
			"data": {
				"request": {
					"url": "{{destinations.northwind}}/Invoices",
					"parameters": {
						"$select": "ShipName, ShippedDate",
						"$skip": "8",
						"$top": "8"
					}
				},
				"path": "/value"
			},
			"item": {
				"text": "{ShipName}",
				"key": "{ShipName}",
				"additionalText": "Shipped Date: {= format.dateTime(${ShippedDate}, {style: 'short'}) }"
			}
		}
	},
	"validationGroup": {
		"type": "group",
		"label": "Validation",
		"expanded": false
	},
	"stringphone": {
		"manifestpath": "/sap.card/configuration/parameters/stringphone/value",
		"label": "String Validation",
		"type": "string",
		"translatable": false,
		"required": true,
		"placeholder": "555-4555",
		"description": "test test",
		"validation": {
			"type": "error",
			"maxLength": 20,
			"minLength": 1,
			"pattern": "^(\\([0-9]{3}\\))?[0-9]{3}-[0-9]{4}$",
			"message": "The string does not match a telephone number"
		}
	},
	"stringphonenomessage": {
		"manifestpath": "/sap.card/configuration/parameters/stringphonenomessage/value",
		"label": "String Validation without Customized Message",
		"type": "string",
		"translatable": false,
		"required": true,
		"placeholder": "555-4555",
		"validation": {
			"type": "warning",
			"maxLength": 20,
			"minLength": 1
		},
		"hint": "Please refer to the <a href='https://www.sap.com'>documentation</a> lets see how this will behave if the text is wrapping to the next line and has <a href='https://www.sap.com'>two links</a>. good?"
	},
	"integerrequired": {
		"manifestpath": "/sap.card/configuration/parameters/integerrequired/value",
		"label": "Field Required",
		"type": "integer",
		"translatable": false,
		"required": true
	},
	"lists": {
		"type": "group",
		"label": "Value Selection",
		"expanded": false
	},
	"stringWithStaticList": {
		"manifestpath": "/sap.card/configuration/parameters/stringWithStaticList/value",
		"label": "String with Static List",
		"type": "string",
		"values": {
			"data": {
				"json": {
					"values": [
						{ "text": "{i18n>TRANSLATED_TEXT01}", "key": "key1", "additionalText": "addtext1", "icon": "sap-icon://accept" },
						{ "text": "{i18n>TRANSLATED_TEXT02}", "key": "key2", "additionalText": "addtext2", "icon": "sap-icon://cart" },
						{ "text": "{i18n>TRANSLATED_TEXT03}", "key": "key3", "additionalText": "addtext3", "icon": "sap-icon://zoom-in" }
					]
				},
				"path": "/values"
			},
			"item": {
				"text": "{text}",
				"key": "{key}",
				"additionalText": "{additionalText}",
				"icon": "{icon}"
			}
		}
	},
	"stringWithRequestList": {
		"manifestpath": "/sap.card/configuration/parameters/stringWithRequestList/value",
		"label": "String with Request List",
		"type": "string",
		"values": {
			"data": {
				"request": {
					"url": "./../stringWithRequestList.json"
				},
				"path": "/"
			},
			"item": {
				"text": "{text}",
				"key": "{key}",
				"additionalText": "{additionalText}",
				"icon": "{icon}"
			}
		}
	},
	"stringWithRequestExtensionList": {
		"manifestpath": "/sap.card/configuration/parameters/stringWithRequestExtensionList/value",
		"label": "String with Request Extension List",
		"type": "string",
		"values": {
			"data": {
				"extension": {
					"method": "getData",
					"args": ["{items>boolean1/value}"]
				},
				"path": "/values"
			},
			"item": {
				"text": "{trainer}",
				"key": "{title}",
				"additionalText": "{location}"
			}
		}
	},
	"stringWithDataFromExtensionList": {
		"manifestpath": "/sap.card/configuration/parameters/stringWithDataFromExtensionList/value",
		"label": "String with Data from Extension List",
		"type": "string",
		"values": {
			"item": {
				"text": "{trainer}",
				"key": "{title}",
				"additionalText": "{location}"
			},
			"path": "/values"
		}
	},
	"stringWithRequestFromDestinationList": {
		"manifestpath": "/sap.card/configuration/parameters/stringWithRequestDestinationList/value",
		"label": "String With Request from Detinations",
		"type": "string",
		"values": {
			"data": {
				"request": {
					"url": "{{destinations.local}}/../stringWithRequestList.json"
				},
				"path": "/"
			},
			"item": {
				"text": "{text}",
				"key": "{key}",
				"additionalText": "{additionalText}",
				"icon": "{icon}"
			}
		}
	},
	"string_Select": {
		"manifestpath": "/sap.card/configuration/parameters/string_Select/value",
		"type": "string",
		"values": {
			"data": {
				"json": [
					{ "text": 0.3, "key": "key1", "additionalText": 1293883200000, "icon": "sap-icon://accept" },
					{ "text": 0.6, "key": "key2", "additionalText": 1293883200000, "icon": "sap-icon://cart" },
					{ "text": 0.8, "key": "key3", "additionalText": 1293883200000, "icon": "sap-icon://zoom-in" }
				],
				"path": "/"
			},
			"item": {
				"text": "Percent: {= format.percent(${text}) }",
				"key": "{key}",
				"additionalText": "datetime: {= format.dateTime(${additionalText}, {style: 'long'}) }",
				"icon": "{icon}"
			}
		},
		"visualization": {
			"type": "Select"
		}
	},
	"Customer_Select": {
		"manifestpath": "/sap.card/configuration/parameters/Customer_Select/value",
		"type": "string",
		"values": {
			"data": {
				"request": {
					"url": "{{destinations.northwind}}/Customers",
					"parameters": {
						"$select": "CustomerID, CompanyName, Country, City, Address"
					}
				},
				"path": "/value"
			},
			"item": {
				"text": "{CompanyName}",
				"key": "{CustomerID}",
				"additionalText": "{= ${CustomerID} !== undefined ? ${Country} + ', ' +  ${City} + ', ' + ${Address} : ''}"
			}
		},
		"visualization": {
			"type": "Select",
			"settings": {
				"forceSelection": true,
				"editable": true,
				"visible": true,
				"showSecondaryValues": true
			}
		}
	},
	"stringArrayNoValues": {
		"manifestpath": "/sap.card/configuration/parameters/stringArrayNoValues/value",
		"label": "String Array With No Values",
		"type": "string[]"
	},
	"Customers": {
		"manifestpath": "/sap.card/configuration/parameters/Customers/value",
		"label": "String Array With Request Values",
		"type": "string[]",
		"required": true,
		"values": {
			"data": {
				"request": {
					"url": "{{destinations.northwind}}/Customers",
					"parameters": {
						"$select": "CustomerID, CompanyName, Country, City, Address"
					}
				},
				"path": "/value"
			},
			"item": {
				"text": "{CompanyName}",
				"key": "{CustomerID}",
				"additionalText": "{= ${CustomerID} !== undefined ? ${Country} + ', ' +  ${City} + ', ' + ${Address} : ''}"
			}
		}
	},
	"separatorIcon": {
		"type": "separator",
		"line": true
	},
	"iconForHeader": {
		"manifestpath": "/sap.card/header/icon/src",
		"type": "string",
		"label": "Card header icon",
		"visualization": {
			"type": "IconSelect",
			"settings": {
				"value": "{currentSettings>value}",
				"editable": "{currentSettings>editable}"
			}
		}
	},
	"iconNotAllowFile": {
		"manifestpath": "/sap.card/configuration/parameters/iconNotAllowFile/src",
		"type": "string",
		"label": "Icon Not Allow from File",
		"visualization": {
			"type": "IconSelect",
			"settings": {
				"value": "{currentSettings>value}",
				"editable": "{currentSettings>editable}",
				"allowFile": false
			}
		}
	},
	"iconNotAllowNone": {
		"manifestpath": "/sap.card/configuration/parameters/iconNotAllowNone/src",
		"type": "string",
		"label": "Icon Not Allow None",
		"visualization": {
			"type": "IconSelect",
			"settings": {
				"value": "{currentSettings>value}",
				"editable": "{currentSettings>editable}",
				"allowNone": false
			}
		}
	},
	"iconWithImage": {
		"manifestpath": "/sap.card/configuration/parameters/iconWithImage/value",
		"label": "Icon with Image",
		"type": "string",
		"visualization": {
			"type": "IconSelect",
			"settings": {
				"value": "{currentSettings>value}",
				"editable": "{currentSettings>editable}"
			}
		}
	},
	"iconWithImageNotAllowNone": {
		"manifestpath": "/sap.card/configuration/parameters/iconWithImageNotAllowNone/value",
		"type": "string",
		"label": "icon with Image Not Allow None",
		"visualization": {
			"type": "IconSelect",
			"settings": {
				"value": "{currentSettings>value}",
				"editable": "{currentSettings>editable}",
				"allowNone": false
			}
		}
	},
	"image": {
		"manifestpath": "/sap.card/configuration/parameters/image/value",
		"type": "string",
		"label": "image",
		"visualization": {
			"type": "ImageSelect",
			"settings": {
				"value": "{currentSettings>value}",
				"editable": "{currentSettings>editable}"
			}
		}
	},
	"separatorColor": {
		"type": "separator",
		"line": true
	},
	"backgroundColor": {
		"manifestpath": "/sap.card/header/icon/backgroundColor",
		"type": "string",
		"label": "Icon Background",
		"description": "Description",
		"visualization": {
			"type": "ColorSelect",
			"settings": {
				"enumValue": "{currentSettings>value}",
				"editable": "{currentSettings>editable}"
			}
		},
		"cols": 1,
		"hint": "Please refer to the <a href='https://www.sap.com'>documentation</a> lets see how this will behave if the text is wrapping to the next line and has <a href='https://www.sap.com'>two links</a>. good?"
	},
	"shape": {
		"manifestpath": "/sap.card/header/icon/shape",
		"label": "Icon Shape",
		"type": "string",
		"description": "Description",
		"visualization": {
			"type": "ShapeSelect",
			"settings": {
				"value": "{currentSettings>value}",
				"editable": "{currentSettings>editable}"
			}
		},
		"cols": 1
	},
	"color": {
		"manifestpath": "/sap.card/configuration/parameters/color/value",
		"type": "string",
		"description": "Description",
		"label": "Color Selection",
		"visualization": {
			"type": "ColorSelect",
			"settings": {
				"enumValue": "{currentSettings>value}",
				"editable": "{currentSettings>editable}"
			}
		},
		"cols": 1
	},
	"boolean2": {
		"manifestpath": "/sap.card/configuration/parameters/boolean2/value",
		"type": "boolean",
		"description": "Description",
		"label": "long long long long long long long long long long label",
		"visualization": {
			"type": "Switch",
			"settings": {
				"state": "{currentSettings>value}",
				"customTextOn": "Yes",
				"customTextOff": "No",
				"enabled": "{currentSettings>editable}"
			}
		},
		"cols": 1
	},
	"group": {
		"label": "Dependent",
		"type": "group",
		"expanded": false
	},
	"subGroup1": {
		"type": "group",
		"label": "String Dependent",
		"level": "1",
		"expanded": false,
		"visualization": {
			"type": "Panel"
		}
	},
	"string1": {
		"manifestpath": "/sap.card/configuration/parameters/string1/value",
		"label": "String: editable, visible, label",
		"type": "string",
		"translatable": true
	},
	"dependentString1": {
		"manifestpath": "/sap.card/configuration/parameters/dependentString1/value",
		"type": "string",
		"editable": "{= ${items>string1/value} === 'editable'}"
	},
	"dependentString2": {
		"manifestpath": "/sap.card/configuration/parameters/dependentString2/value",
		"type": "string",
		"visible": "{= ${items>string1/value} === 'visible'}"
	},
	"dependentString3": {
		"manifestpath": "/sap.card/configuration/parameters/dependentString3/value",
		"label": "{= ${items>string1/value} === 'label'? 'dependentString3 True' : 'dependentString3 False' }",
		"type": "string"
	},
	"subGroup2": {
		"type": "group",
		"label": "Integer Dependent",
		"level": "1",
		"expanded": false,
		"visualization": {
			"type": "Panel"
		}
	},
	"integer1": {
		"manifestpath": "/sap.card/configuration/parameters/integer1/value",
		"type": "integer",
		"label": "Integer: 1, 3, 6, 9"
	},
	"dependentInteger1": {
		"manifestpath": "/sap.card/configuration/parameters/dependentInteger1/value",
		"label": "Value of Dependent Field Greater Than 2",
		"type": "string",
		"editable": "{= ${items>integer1/value} > 2}"
	},
	"dependentInteger2": {
		"manifestpath": "/sap.card/configuration/parameters/dependentInteger1/value",
		"label": "Value of Dependent Field Greater Than 5",
		"type": "string",
		"visible": "{= ${items>integer1/value} > 5}"
	},
	"dependentInteger3": {
		"manifestpath": "/sap.card/configuration/parameters/dependentInteger3/value",
		"label": "{= ${items>integer1/value} > 8 ? 'dependentInteger3 True' : 'dependentInteger3 False' }",
		"type": "string"
	},
	"subGroup3": {
		"type": "group",
		"label": "Boolean Dependent",
		"level": "1",
		"expanded": false,
		"visualization": {
			"type": "Panel"
		}
	},
	"boolean1": {
		"manifestpath": "/sap.card/configuration/parameters/boolean1/value",
		"type": "boolean",
		"label": "long long long long long long long long long long label",
		"visualization": {
			"type": "Switch",
			"settings": {
				"state": "{currentSettings>value}",
				"customTextOn": "Yes",
				"customTextOff": "No",
				"enabled": "{currentSettings>editable}"
			}
		}
	},
	"dependentBoolean1": {
		"manifestpath": "/sap.card/configuration/parameters/dependentBoolean1/value",
		"label": "Editable Dependent on Value",
		"type": "string",
		"editable": "{items>boolean1/value}"
	},
	"dependentBoolean2": {
		"manifestpath": "/sap.card/configuration/parameters/dependentBoolean2/value",
		"label": "Visible Dependent on Value",
		"type": "string",
		"visible": "{items>boolean1/value}"
	},
	"dependentBoolean3": {
		"manifestpath": "/sap.card/configuration/parameters/dependentBoolean3/value",
		"label": "{= ${items>boolean1/value} === true ? 'dependentBoolean3 True' : 'dependentBoolean3 False' }",
		"type": "string"
	},
	"subTabgroup": {
		"label": "Sub Group (Tab)",
		"type": "group",
		"expanded": false,
		"hint": "Please refer to the <a href='https://www.sap.com'>documentation</a> lets see how this will behave if the text is wrapping to the next line and has <a href='https://www.sap.com'>two links</a>. good?"
	},
	"subGroup4": {
		"type": "group",
		"label": "Sub Tab 1",
		"level": "1",
		"expanded": true,
		"visualization": {
			"type": "Tab"
		}
	},
	"string1inSubtab": {
		"manifestpath": "/sap.card/configuration/parameters/string1inSubtab/value",
		"label": "String Validation 1",
		"type": "string",
		"translatable": true,
		"editableToUser": true,
		"visibleToUser": true,
		"required": true,
		"description": "test",
		"validation": {
			"type": "warning",
			"minLength": 8,
			"message": "The length of the string less than 8."
		}
	},
	"subGroup5": {
		"type": "group",
		"label": "Sub Tab 2",
		"level": "1",
		"expanded": true,
		"visualization": {
			"type": "Tab"
		}
	},
	"string2inSubtab": {
		"manifestpath": "/sap.card/configuration/parameters/string2inSubtab/value",
		"label": "String Validation 2",
		"type": "string",
		"translatable": true,
		"editableToUser": true,
		"visibleToUser": true,
		"required": true,
		"description": "test",
		"validation": {
			"type": "error",
			"minLength": 8,
			"message": "The length of the string less than 8."
		}
	},
	"string3inSubtab": {
		"manifestpath": "/sap.card/configuration/parameters/string3inSubtab/value",
		"label": "String Validation 3",
		"type": "string",
		"translatable": true,
		"required": true,
		"description": "test",
		"validation": {
			"type": "warning",
			"minLength": 8,
			"message": "The length of the string less than 8."
		}
	},
	"subGroup6": {
		"type": "group",
		"label": "Sub Tab 3",
		"level": "1",
		"expanded": true,
		"visualization": {
			"type": "Tab"
		}
	},
	"string4inSubtab": {
		"manifestpath": "/sap.card/configuration/parameters/string4inSubtab/value",
		"label": "String Validation 4",
		"type": "string",
		"translatable": true,
		"required": true
	},
	"filterBackendInStringArray": {
		"label": "Filter backend by input in MultiComboBox or MultiInput",
		"type": "group",
		"expanded": false
	},
	"CustomersWithMultiKeys": {
		"manifestpath": "/sap.card/configuration/parameters/CustomersWithMultiKeys/value",
		"type": "string[]",
		"values": {
			"data": {
				"request": {
					"url": "{{destinations.northwind}}/Customers",
					"parameters": {
						"$select": "CustomerID, CompanyName, Country, City, Address",
						"$filter": "startswith(CompanyName,'{currentSettings>suggestValue}')"
					}
				},
				"path": "/value"
			},
			"item": {
				"text": "{CompanyName}",
				"key": "{CustomerID}/{CompanyName}",
				"additionalText": "{= ${CustomerID} !== undefined ? ${Country} + ', ' +  ${City} + ', ' + ${Address} : ''}"
			},
			"keySeparator": "/"
		},
		"validations": [{
			"type": "error",
			"minLength": 2,
			"maxLength": 4
		}]
	},
	"CustomersWithMultiKeysAndSeperator": {
		"manifestpath": "/sap.card/configuration/parameters/CustomersWithMultiKeysAndSeperator/value",
		"type": "string[]",
		"values": {
			"data": {
				"request": {
					"url": "{{destinations.northwind}}/Customers",
					"parameters": {
						"$select": "CustomerID, CompanyName, Country, City, Address",
						"$filter": "startswith(CompanyName,'{currentSettings>suggestValue}')"
					}
				},
				"path": "/value"
			},
			"item": {
				"text": "{CompanyName}",
				"key": "{CustomerID}#{CompanyName}",
				"additionalText": "{= ${CustomerID} !== undefined ? ${Country} + ', ' +  ${City} + ', ' + ${Address} : ''}"
			}
		}
	},
	"CustomersWithFilterParameter": {
		"manifestpath": "/sap.card/configuration/parameters/CustomersWithFilterParameter/value",
		"type": "string[]",
		"values": {
			"data": {
				"request": {
					"url": "{{destinations.northwind}}/Customers",
					"parameters": {
						"$select": "CustomerID, CompanyName, Country, City, Address",
						"$filter": "startswith(CompanyName,'{currentSettings>suggestValue}')"
					}
				},
				"path": "/value"
			},
			"item": {
				"text": "{CompanyName}",
				"key": "{CustomerID}",
				"additionalText": "{= ${CustomerID} !== undefined ? ${Country} + ', ' +  ${City} + ', ' + ${Address} : ''}"
			}
		}
	},
	"CustomersWithFilterInURL": {
		"manifestpath": "/sap.card/configuration/parameters/CustomersWithFilterInURL/value",
		"type": "string[]",
		"translatable": true,
		"values": {
			"data": {
				"request": {
					"url": "{{destinations.northwind}}/Customers?$select=CustomerID, CompanyName, Country, City, Address&$filter=contains(CompanyName,'{currentSettings>suggestValue}')"
				},
				"path": "/value"
			},
			"item": {
				"text": "{CompanyName}",
				"key": "{CustomerID}",
				"additionalText": "{= ${CustomerID} !== undefined ? ${Country} + ', ' +  ${City} + ', ' + ${Address} : ''}"
			}
		}
	},
	"Customers_MultiInput": {
		"manifestpath": "/sap.card/configuration/parameters/Customers_MultiInput/value",
		"type": "string[]",
		"required": true,
		"values": {
			"data": {
				"request": {
					"url": "{{destinations.northwind}}/Customers",
					"parameters": {
						"$select": "CustomerID, CompanyName, Country, City, Address",
						"$filter": "startswith(CompanyName,'{currentSettings>suggestValue}')"
					}
				},
				"path": "/value"
			},
			"item": {
				"text": "{CompanyName}",
				"key": "{CustomerID}",
				"additionalText": "{= ${CustomerID} !== undefined ? ${Country} + ', ' +  ${City} + ', ' + ${Address} : ''}"
			}
		},
		"visualization": {
			"type": "MultiInput"
		}
	},
	"filterBackendInString": {
		"label": "Filter backend by input in ComboBox",
		"type": "group",
		"expanded": false
	},
	"CustomerWithFilterParameter": {
		"manifestpath": "/sap.card/configuration/parameters/CustomerWithFilterParameter/value",
		"label": "Customer with filter parameter",
		"type": "string",
		"translatable": true,
		"values": {
			"data": {
				"request": {
					"url": "{{destinations.northwind}}/Customers",
					"parameters": {
						"$select": "CustomerID, CompanyName, Country, City, Address",
						"$filter": "contains(CompanyName,'{currentSettings>suggestValue}')"
					}
				},
				"path": "/value"
			},
			"item": {
				"text": "{CompanyName}",
				"key": "{CustomerID}",
				"additionalText": "{= ${CustomerID} !== undefined ? ${Country} + ', ' +  ${City} + ', ' + ${Address} : ''}"
			}
		}
	},
	"CustomerWithFilterInURL": {
		"manifestpath": "/sap.card/configuration/parameters/CustomerWithFilterInURL/value",
		"type": "string",
		"translatable": true,
		"values": {
			"data": {
				"request": {
					"url": "{{destinations.northwind}}/Customers?$select=CustomerID, CompanyName, Country, City, Address&$filter=contains(CompanyName,'{currentSettings>suggestValue}')"
				},
				"path": "/value"
			},
			"item": {
				"text": "{CompanyName}",
				"key": "{CustomerID}",
				"additionalText": "{= ${CustomerID} !== undefined ? ${Country} + ', ' +  ${City} + ', ' + ${Address} : ''}"
			}
		}
	},
	"linkedParameters": {
		"label": "Linked Parameters",
		"type": "group",
		"expanded": false
	},
	"Customer": {
		"manifestpath": "/sap.card/configuration/parameters/Customer/value",
		"type": "string",
		"translatable": true,
		"values": {
			"data": {
				"request": {
					"url": "{{destinations.northwind}}/Customers",
					"parameters": {
						"$select": "CustomerID, CompanyName, Country, City, Address"
					}
				},
				"path": "/value"
			},
			"item": {
				"text": "{CompanyName}",
				"key": "{CustomerID}",
				"additionalText": "{= ${CustomerID} !== undefined ? ${Country} + ', ' +  ${City} + ', ' + ${Address} : ''}"
			}
		}
	},
	"Employee": {
		"manifestpath": "/sap.card/configuration/parameters/Employee/value",
		"type": "string",
		"values": {
			"data": {
				"request": {
					"url": "{{destinations.northwind}}/Employees",
					"parameters": {
						"$select": "EmployeeID, FirstName, LastName, Country, Title, HomePhone"
					}
				},
				"path": "/value"
			},
			"item": {
				"text": "{FirstName} {LastName}",
				"key": "{EmployeeID}",
				"additionalText": "{= ${EmployeeID} !== undefined ? ${Country} + ', ' +  ${Title} + ', ' + ${HomePhone} : ''}"
			}
		}
	},
	"Order": {
		"manifestpath": "/sap.card/configuration/parameters/Order/value",
		"type": "string",
		"translatable": true,
		"required": true,
		"validation": {
			"type": "warning",
			"maxLength": 4,
			"minLength": 1
		},
		"values": {
			"data": {
				"request": {
					"url": "{{destinations.northwind}}/Orders",
					"parameters": {
						"$select": "OrderID, OrderDate, CustomerID, EmployeeID",
						"$filter": "(CustomerID eq '{items>Customer/value}') and (EmployeeID eq {items>Employee/value})"
					}
				},
				"path": "/value"
			},
			"item": {
				"text": "{= ${OrderID} !== undefined ? ${OrderID} + '-' +  ${CustomerID} + '-' + ${EmployeeID} : ''}",
				"key": "{OrderID}",
				"additionalText": "{OrderDate}"
			}
		}
	},
	"Product": {
		"manifestpath": "/sap.card/configuration/parameters/Product/value",
		"type": "string",
		"values": {
			"data": {
				"request": {
					"url": "{{destinations.northwind}}/Order_Details",
					"parameters": {
						"$expand": "Product",
						"$filter": "OrderID eq {items>Order/value}"
					}
				},
				"path": "/value"
			},
			"item": {
				"text": "{= ${OrderID} !== undefined ? ${OrderID} + '-' +  ${ProductID} + ':' + ${Product/ProductName} : ''}",
				"key": "{ProductID}",
				"additionalText": "{= ${OrderID} !== undefined ? ${UnitPrice} + ' USD, count: '+ ${Quantity} : ''}"
			}
		}
	},
	"Orders": {
		"manifestpath": "/sap.card/configuration/parameters/Orders/value",
		"type": "string[]",
		"values": {
			"data": {
				"request": {
					"url": "{{destinations.northwind}}/Orders",
					"parameters": {
						"$select": "OrderID, OrderDate, CustomerID, EmployeeID",
						"$filter": "(CustomerID eq '{items>Customer/value}') and (EmployeeID eq {items>Employee/value})"
					}
				},
				"path": "/value"
			},
			"item": {
				"text": "{= ${OrderID} !== undefined ? ${OrderID} + '-' +  ${CustomerID} + '-' + ${EmployeeID} : ''}",
				"key": "{OrderID}",
				"additionalText": "{OrderDate}"
			}
		}
	},
	"CustomerWithTopAndSkipOption": {
		"manifestpath": "/sap.card/configuration/parameters/CustomerWithTopAndSkipOption/value",
		"type": "string",
		"values": {
			"data": {
				"request": {
					"url": "{{destinations.northwind}}/Customers",
					"parameters": {
						"$select": "CustomerID, CompanyName, Country, City, Address",
						"$skip": "5",
						"$top": "5"
					}
				},
				"path": "/value"
			},
			"item": {
				"text": "{CompanyName}",
				"key": "{CustomerID}",
				"additionalText": "{= ${CustomerID} !== undefined ? ${Country} + ', ' +  ${City} + ', ' + ${Address} : ''}"
			}
		}
	}
}