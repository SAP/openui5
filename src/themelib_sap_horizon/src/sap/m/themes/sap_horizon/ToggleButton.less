/* ==================================== */
/* CSS for control sap.m/ToggleButton   */
/* Horizon theme                        */
/* ==================================== */

html.sap-desktop .sapMToggleBtnPressed,
.sapMToggleBtnPressed:not(.sapMBtnDisabled) {
	box-shadow: none;

	&.sapMBtnNegative {
		background-color: var(--sapButton_Reject_Selected_Background);
		border-color: var(--sapButton_Reject_Selected_BorderColor);
		color: var(--sapButton_Reject_Selected_TextColor);

		& .sapUiIcon {
			color: var(--sapButton_Reject_Selected_TextColor);
		}
	}

	&.sapMBtnSuccess {
		background-color: var(--sapButton_Accept_Selected_Background);
		border-color: var(--sapButton_Accept_Selected_BorderColor);
		color: var(--sapButton_Accept_Selected_TextColor);

		& .sapUiIcon {
			color: var(--sapButton_Accept_Selected_TextColor);
		}
	}

	&.sapMBtnCritical {
		background-color: var(--sapButton_Attention_Selected_Background);
		border-color: var(--sapButton_Attention_Selected_BorderColor);
		color: var(--sapButton_Attention_Selected_TextColor);

		& .sapUiIcon {
			color: var(--sapButton_Attention_Selected_TextColor);
		}
	}
}

/* hover and down on toggled button */
.sapMBtn:hover > .sapMBtnHoverable.sapMToggleBtnPressed:not(.sapMBtnActive),
.sapMBtn .sapMBtnHoverable.sapMToggleBtnPressed:hover {
	box-shadow: none;

	&.sapMBtnReject,
	&.sapMBtnNegative {
		background-color: var(--sapButton_Reject_Selected_Hover_Background);
		border-color: var(--sapButton_Reject_Selected_Hover_BorderColor);
		color: var(--sapButton_Reject_Selected_TextColor);

		& .sapUiIcon {
			color: var(--sapButton_Reject_Selected_TextColor);
		}
	}

	&.sapMBtnAccept,
	&.sapMBtnSuccess {
		background-color: var(--sapButton_Accept_Selected_Hover_Background);
		border-color: var(--sapButton_Accept_Selected_Hover_BorderColor);
		color: var(--sapButton_Accept_Selected_TextColor);

		& .sapUiIcon {
			color: var(--sapButton_Accept_Selected_TextColor);
		}
	}

	&.sapMBtnAttention,
	&.sapMBtnCritical {
		background-color: var(--sapButton_Attention_Selected_Hover_Background);
		border-color: var(--sapButton_Attention_Selected_Hover_BorderColor);
		color: var(--sapButton_Attention_Selected_TextColor);

		& .sapUiIcon {
			color: var(--sapButton_Attention_Selected_TextColor);
		}
	}
}

.sapMBtn {

	.sapMBtnCritical,
	.sapMBtnNegative,
	.sapMBtnSuccess,
	.sapMBtnNeutral {

		&.sapMBtnInner.sapMToggleBtnPressed {
			text-shadow: none;
		}
	}
}

/* Focus of toggled button */
.sapMBtn:focus > .sapMBtnInner.sapMToggleBtnPressed.sapMFocusable {
	outline-color: var(--sapContent_FocusColor);
}

.sapMBtn .sapMBtnCritical.sapMToggleBtnPressed,
.sapContrast span.sapMBtnInner.sapMBtnCritical.sapMToggleBtnPressed,
.sapMBtn:hover .sapMBtnCritical.sapMToggleBtnPressed,
.sapContrast:hover span.sapMBtnInner.sapMBtnCritical.sapMToggleBtnPressed,
.sapMBtn .sapMBtnNegative.sapMToggleBtnPressed,
.sapContrast span.sapMBtnInner.sapMBtnNegative.sapMToggleBtnPressed,
.sapMBtn:hover .sapMBtnNegative.sapMToggleBtnPressed,
.sapContrast:hover span.sapMBtnInner.sapMBtnNegative.sapMToggleBtnPressed,
.sapMBtn .sapMBtnSuccess.sapMToggleBtnPressed,
.sapContrast span.sapMBtnInner.sapMBtnSuccess.sapMToggleBtnPressed,
.sapMBtn:hover .sapMBtnSuccess.sapMToggleBtnPressed,
.sapContrast:hover span.sapMBtnInner.sapMBtnSuccess.sapMToggleBtnPressed,
.sapMBtn .sapMBtnNeutral.sapMToggleBtnPressed,
.sapContrast span.sapMBtnInner.sapMBtnNeutral.sapMToggleBtnPressed,
.sapMBtn:hover .sapMBtnNeutral.sapMToggleBtnPressed,
.sapContrast:hover span.sapMBtnInner.sapMBtnNeutral.sapMToggleBtnPressed {

	.sapMBtnContent,
	.sapMBtnIcon {
		color: inherit;
	}
}

.sapMBtn .sapMBtnEmphasized.sapMToggleBtnPressed {
	background-color: var(--sapButton_Selected_Background);
	color: var(--sapButton_Selected_TextColor);
	border-color: var(--sapButton_Selected_BorderColor);
}

span.sapMBtnInner.sapMToggleBtnPressed .sapMBtnIcon,
span.sapMBtnInner.sapMToggleBtnPressed.sapMBtnTransparent > .sapMBtnIcon,
html.sap-desktop .sapMToggleBtnPressed.sapMBtnTransparent > .sapMBtnIcon {
	color: var(--sapButton_Selected_TextColor);
}


html.sap-desktop .sapMBtn:focus > .sapMBtnEmphasized.sapMToggleBtnPressed.sapMFocusable {
	border-color: var(--sapContent_FocusColor);
}

html.sap-desktop .sapMBtn:focus > .sapMBtnEmphasized.sapMToggleBtnPressed.sapMFocusable:not(.sapMBadgeIndicator)::after {
	border-color: var(--sapContent_FocusColor);
	left: -0.0625rem;
	top: -0.0625rem;
	right: -0.0625rem;
	bottom: -0.0625rem;
	border-radius: 0.5rem;
}

html.sap-desktop .sapMBtn:focus > .sapMToggleBtnPressed.sapMBtnEmphasized.sapMFocusable:not(.sapMBtnActive):not(.sapMToggleBtnPressed):not(.sapMBadgeIndicator)::before,
html.sap-desktop .sapMBtn:focus > .sapMToggleBtnPressed.sapMBtnCritical.sapMFocusable:not(.sapMBtnActive):not(.sapMBadgeIndicator)::before,
html.sap-desktop .sapMBtn:focus > .sapMToggleBtnPressed.sapMBtnNegative.sapMFocusable:not(.sapMBtnActive):not(.sapMBadgeIndicator)::before,
html.sap-desktop .sapMBtn:focus > .sapMToggleBtnPressed.sapMBtnSuccess.sapMFocusable:not(.sapMBtnActive):not(.sapMBadgeIndicator)::before {
	border: 0.125rem solid var(--sapContent_FocusColor);
}

.sapUiSizeCompact .sapMBar-CTX .sapMBtnDefault.sapMBtnInner.sapMToggleBtnPressed:not(.sapMBtnDisabled) {
	border-color: var(--sapButton_Selected_BorderColor);
}