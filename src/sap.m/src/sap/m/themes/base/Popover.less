/* ============================================= */
/* CSS for controlsap.m/Popover.control */
/* ============================================= */

.sapMPopover{
	position: absolute;
	color: @sapUiText;
	min-width: 100px;
	-webkit-box-sizing: border-box;
	-moz-box-sizing: border-box;
	box-sizing: border-box;
	outline: none;
	max-width: 100%;
	max-height: 100%;
	overflow: hidden;
	-webkit-transition: opacity 0.2s linear;
	-moz-transition: opacity 0.2s linear;
 	transition: opacity 0.2s linear;
}

.sapMPopoverHeader .sapMTitle {
	font-size: .865rem;
}

.sapMPopover .sapMPopoverCont{
	overflow: hidden;
	position: relative;
	/* set margin to every side */
	margin: 0.4375em;
	background-color: @sapUiLightBG;
}

.sapMPopover .sapMPopoverScroll{
/* 	width: 100%;  when set width to 100%, the horizontal scrolling will be disabled and this is done in the end of setArrowPosition method*/
	display: inline-block;
	overflow: hidden;
	vertical-align: middle;
	-webkit-box-sizing: border-box;
	-moz-box-sizing: border-box;
	box-sizing: border-box;
}

.sapMPopover.sapUiPopupWithPadding .sapMPopoverScroll{
	padding: 1rem;
}

/* disable scrolling automatically for sap.m.Page sap.m.NavContainer sap.m.ScrollingContainer inside Popover */
.sapMPopoverVerScrollDisabled .sapMPopoverScroll {
	height: 100%;
}

/* disable scrolling automatically for sap.m.Page sap.m.NavContainer sap.m.ScrollingContainer inside Popover */
.sapMPopoverHorScrollDisabled .sapMPopoverScroll {
	display: block;
	/* This div has position set to absolute when runs in android native browser with version less than 4.1. */
	/* Width needs to be set to 100% due to position absolute */
	width: 100%;
}

.sapMPopoverCont:focus{
	outline: none;
}

.sapMPopover.sapMPopoverTransparent {
	opacity: 0;
}

.sapMPopover.sapMPopoverOpaque {
	opacity: 1;
}

/* marker for Popover with a bar */
.sapMPopoverWithBar{

}

/* marker for Popover without a bar */
.sapMPopoverWithoutBar{

}

/* marker for Popover with NavContainer which includes pages inside */
.sapMPopoverNav{

}
/* marker for Popover with footer*/
.sapMPopoverWithFooter{

}

/* disable margin according to the header and footer availability */
.sapMPopoverWithBar.sapMPopoverWithFooter > .sapMPopoverCont {
	margin-bottom: 0;
	margin-top: 0;
}
/* disable margin according to the header and footer availability */
.sapMPopoverWithoutBar.sapMPopoverWithFooter > .sapMPopoverCont {
	margin-bottom: 0;
}
/* disable margin according to the header and footer availability */
.sapMPopoverWithBar.sapMPopoverWithoutFooter > .sapMPopoverCont {
	margin-top: 0;
}

.sapMPopoverWithoutBar.sapMPopoverNav > .sapMPopoverCont,
.sapMPopoverWithoutBar.sapMPopoverPage > .sapMPopoverCont,
.sapMActionSheetPopover > .sapMPopoverCont{
	margin: 0;
	background-color: transparent;
}

.sapMPopover > .sapMBar{
	position: relative;
	width: auto;
}

.sapMPopoverWithoutBar.sapMPopoverNav .sapMPopoverCont .sapMPage{
	background-color: transparent;
}

.sapMPopover > .sapMPopoverCont .sapMPage > section {
	-webkit-box-sizing: border-box;
	-moz-box-sizing: border-box;
	box-sizing: border-box;
	width: auto;
}

/* This css rule is for mvi theme. Because mvi is deleted right now, this rule will be commented out here in case mvi has to be restored.
.sapMPopover:not(.sapMPopoverWithFooter) .sapMPopoverCont .sapMPage:not(.sapMPageWithFooter) > section {
	bottom: 0.625em;
}
*/

.sapMPopoverWithoutBar .sapMPage footer.sapMIBar{
	position: absolute;
}

/* mixin call for creating container content padding classes (arguments: rootContainer, contentSelector) */
.sapUiContainerContentPadding(~".sapMPopover", ~"> .sapMPopoverCont > .sapMPopoverScroll");
