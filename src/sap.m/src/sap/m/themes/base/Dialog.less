/* ============================================= */
/* CSS for control sap.m/Dialog.control          */
/* ============================================= */

.sapMDialog,
.sapMMessageDialog .sapMDialogScrollCont,
.sapMDialogSection {
	-webkit-box-sizing: border-box;
	-moz-box-sizing: border-box;
	box-sizing: border-box;
}

.sapMDialog {
	position: absolute;
	background-clip: padding-box;
	-webkit-animation-duration: 0.1s;
	-webkit-animation-timing-function: ease-in;
	-moz-animation-duration: 0.1s;
	-moz-animation-timing-function: ease-in;
	animation-duration: 0.1s;
	animation-timing-function: ease-in;
	max-width: 100%;
	max-height: 100%;
	overflow: hidden;
	outline: none;
}

.sap-tablet .sapMDialog,
.sap-desktop .sapMDialog {
	min-width: 25rem;
}

.sapMDialog > .sapMBar {
	position: relative;
	width: auto;
}

.sapMDialogSection {
	position: relative;
	overflow: hidden;
}

.sapMDialogScroll {
	display: inline-block; /*this is for horizontal scrolling enablement*/
	min-height: 100%;
  	width: 100%;
	vertical-align: middle;
}

/* disable scrolling automatically for sap.m.Page sap.m.NavContainer sap.m.ScrollingContainer inside Dialog */
.sapMDialogVerScrollDisabled .sapMDialogScroll {
	height: 100%;
}

/* disable scrolling automatically for sap.m.Page sap.m.NavContainer sap.m.ScrollingContainer inside Dialog */
.sapMDialogHorScrollDisabled .sapMDialogScroll {
	display: block;
	/* This div has position set to absolute when runs in android native browser with version less than 4.1. */
	/* Width needs to be set to 100% due to position absolute */
	width: 100%;
}

.sapMDialogHidden {
/* 	display: none; */
/* 	visibility need to be used instead of display none, because some control inside dialog may need to do calculation */
	visibility: hidden;
}

.sapMDialogSliding {
	-webkit-transition-duration: 0.3s;
	-moz-transition-duration: 0.3s;
	transition-duration: 0.3s;
}

.sapMDialogBlockLayer {
	opacity: 0.6;
}

.sapMDialogTransparent {
	opacity: 0;
}

.sapMDialogActions {
	display: flex;
	display: -webkit-box;
	display: -ms-flexbox;
	display: -moz-box;
	width: 100%;
}

.sapMDialogActions > .sapMDialogAction {
	flex: 1 1 0px;
	-webkit-box-flex: 1;
	width: 0;
	-ms-flex: 1 1 0px;
	-moz-box-flex: 1;
}

html[data-sap-ui-browser^="ie9"] .sapMDialog-CTX .sapMDialogActions > .sapMDialogAction {
	display: inline-block;
	vertical-align: bottom;
}

.sapUiPopupWithPadding .sapMDialogScrollCont {
	padding: 1rem;
}

/* messagedialog always has content padding */
.sapMMessageDialog .sapMDialogScrollCont {
	padding: 1.5rem;
	-webkit-box-sizing: border-box;
	-moz-box-sizing: border-box;
	box-sizing: border-box;
}

.sapMDialogWithScrollCont .sapMDialogScroll {
	/*
		This property together with the position: absolute in sapMDialogScrollCont fixes the browser bug stated here:
		http://stackoverflow.com/questions/8468066/child-inside-parent-with-min-height-100-not-inheriting-height
	*/
	position: relative;
}

.sapMDialogWithScrollCont .sapMDialogScrollCont {
	padding: 0;
	width: 100%;
	height: 100%;
	position: absolute;
}

.sapMActionSheetDialog .sapMDialogScrollCont {
	padding: 0; /* no content padding for action sheet */
}

@-webkit-keyframes sapMDialogZoomIn {
	0% {
		-webkit-transform: scale3d(0.9,0.9,1);
		transform: scale3d(0.9,0.9,1);
		opacity: 0;
	}

	100% {
		-webkit-transform: scale3d(1, 1, 1);
		transform: scale3d(1, 1, 1);
		opacity: 1;
	}
}

@-webkit-keyframes sapMDialogZoomOut {
	0% {
		-webkit-transform: scale3d(1, 1, 1);
		transform: scale3d(1, 1, 1);
		opacity: 1;
	}

	100% {
		-webkit-transform: scale3d(0.9, 0.9, 1);
		transform: scale3d(0.9, 0.9, 1);
		opacity: 0;
	}
}

@-moz-keyframes sapMDialogZoomIn {
	0% {
		-moz-transform: scale3d(0.9, 0.9, 1);
		transform: scale3d(0.9, 0.9, 1);
		opacity: 0;
	}
	100% {
		-moz-transform: scale3d(1,1,1);
		transform: scale3d(1,1,1);
		opacity: 1;
	}
}

@-moz-keyframes sapMDialogZoomOut {
	0% {
		-moz-transform: scale3d(1, 1, 1);
		transform: scale3d(1, 1, 1);
		opacity: 1;
	}

	100% {
		-moz-transform: scale3d(0.9, 0.9, 1);
		transform: scale3d(0.9, 0.9, 1);
		opacity: 0;
	}
}

@keyframes sapMDialogZoomIn {
	from {
		transform: scale3d(0.9, 0.9, 1);
		opacity: 0;
	}

	to {
		transform: scale3d(1, 1, 1);
		opacity: 1;
	}
}

@keyframes sapMDialogZoomOut {
	from {
		transform: scale3d(1, 1, 1);
		opacity: 1;
	}

	to {
		transform: scale3d(0.9, 0.9, 1);
		opacity: 0;
	}
}

.sapMDialogOpening {
	-webkit-animation-name: sapMDialogZoomIn;
	-moz-animation-name: sapMDialogZoomIn;
	animation-name: sapMDialogZoomIn;
}

.sapMDialogClosing {
	-webkit-animation-name: sapMDialogZoomOut;
	-moz-animation-name: sapMDialogZoomOut;
	animation-name: sapMDialogZoomOut;
}

.sapMDialogBlockLayerAnimation {
	position: absolute;
	-webkit-transition: opacity 0.2s linear;
	-moz-transition: opacity 0.2s linear;
	transition: opacity 0.2s linear;
}

/* mixin call for creating container content padding classes (arguments: rootContainer, contentSelector) */
.sapUiContainerContentPadding(~".sapMDialog", ~"> section > .sapMDialogScroll > .sapMDialogScrollCont");